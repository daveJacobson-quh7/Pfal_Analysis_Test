
params {
// mars parameters
//ref = "$baseDir/REFERENCES/mars_pf_ref.fasta"
//reads = "$baseDir/TEST_DATA/*{R1,R2}*.fastq.gz"
//params.adapter = "$baseDir/Ref/adapters.fa"
out = "$baseDir/MaRS_output"
//snpeff_config = "$baseDir/6Genes_ref"
pyscripts = "$baseDir/python_R_scripts"
//bed = "$baseDir/REFERENCES/mars_pf.bed"
//voi = "$baseDir/REFERENCES/voinew3.csv"
memory = "12g"
//params.cpus = 4



ref = "$baseDir/REFERENCES/pf_3D7_Ref/mars_pf_ref.fasta"
voi = "$baseDir/REFERENCES/pf_3D7_Ref/voinew3.csv"
gff = "$baseDir/REFERENCES/pf_3D7_Ref/mars_pf.gff"

dbName = "pf_3D7_snpEff_db"
snpeff_config = "$baseDir/pf_3D7_snpEff_db"


// Geo Prediction Parameters

RAM  = 2000
threads = 14
fastqDir = "$baseDir/TEST_DATA"
cleanReads = "$baseDir/cleanReads"
variantFolder = "$baseDir/GeoPrediction_output/variantCalls"
predictionFolder = "$baseDir/GeoPrediction_output/predictedOut"
reportFolder = "$baseDir/REPORTS"

metadata = "$baseDir/test_pfal_meta.xlsx"

ampliconList = "$baseDir/REFERENCES/eachAmplicon.txt"

//The maximum amount of memory used in BBmerge. Larger files (>250Mbs) need a lot of memory, recommended over 10g. 
//Specify GBs of memory with 'g', MBs of memory with 'm'. The default requests 12 GBs of memory. Specified value must be within quotes
bbmergeRAM = "12g"


adapters = "$baseDir/REFERENCES/Illumina_adapters.fasta"

humanRef = "$baseDir/REFERENCES/GRCh38_noalt_as"

ampliseqRef = "$baseDir/REFERENCES/pfs47_cpmpCombine_reference.fasta"

panelRefBarcode = "$baseDir/REFERENCES/pfs47_cpmpCombine_barcode_allSamples.csv"

balkCountry_JLIB = "$baseDir/REFERENCES/pfs47cpmpCombined_singularityCountry_classifier.joblib.gz"

balkRegion_JLIB = "$baseDir/REFERENCES/pfs47cpmpCombined_singularityRegion_classifier.joblib.gz"

balkContinent_JLIB = "$baseDir/REFERENCES/pfs47cpmpCombined_singularityContinent_classifier.joblib.gz"

balkKeyFile = "$baseDir/REFERENCES/balkKey_pfs47_cpmpCombine_fixName_v2.txt"

balkClassifier = "/opt/lkc-bisnp/lkc_bisnp-run"

snpPositions = "$baseDir/REFERENCES/pfs47_cpmpCombine_snpPositions.csv"

REFERENCES = "$baseDir/REFERENCES"

qcFolder = "$baseDir/FASTQ_QC"

//WGS parameters
ref3D7 = "$baseDir/REFERENCES/Pf3d7_fullGenome"
REFERENCES = "$baseDir/REFERENCES"

libKit = "$baseDir/optimized_gatk4_pipeline/optimal_gatk4_refs/nextera_seq.fa"

gatk4PipelineRefs =  "$baseDir/optimized_gatk4_pipeline/optimal_gatk4_refs/"
gatk4_RAM = "40g"

//flanking regions paramerts - TBD
flankingRef_bowtie2 = "$baseDir/REFERENCES/hrp2_flanking"
flankingRef_bwa ="$baseDir/REFERENCES/pf3d7_hrp2_plusMinus30kb.fasta"
gene = "hrp2_flanking"


}

profiles {


//May add module load gatk in the before script, but will hold off for now
singularity {

    singularity.enabled = true
    singularity.cacheDir = "$baseDir/assets"

    process.shell = ['/bin/bash']
    singularity.runOptions = "-B /scicomp:/scicomp"
    singularity.autoMounts = true

    process {
    beforeScript = "source /etc/profile; source /etc/profile.d/modules.sh; module load nextflow"
    
    withLabel: nfNest {
    //Local singularity container built from Dockerfile. Built using singularity remote after converting Dockerfile to nfNest.def (and making changes to .def to make it work for singularity).
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/nfNest_remoteBuild_v2.sif"
    }
    withLabel: bioinformaticProcessing {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    withLabel: balkClassifier {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/balkClassifier.sif"
      }
    withLabel: reporting {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/R_report_v5.sif"
      }
    withLabel: fastqcEnv {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    
    withLabel: mappingSoftware {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    withLabel: rMerging {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    withLabel: pythonEnv {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/plasmodium_bioinformatics_container.sif"
      }
    withLabel: bed {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/singularityContainers/samtools_bedtools.sif"
      }
    withLabel: optiGatk4 {
        container = "/scicomp/groups-pure/Projects/CycloDeploy/Plasmodium_Ampliseq_Nextflow/P_falciparum_WGS/optimized_gatk4_pipeline/opti_gatk4_230911.sif"
      }
}
}


}




/* 
Update this in future
                                    Adding manifest
*/
VERSION = '1.0.0'
manifest {
    name            = "yyr4/Nf-NeST"
    author          = "Dhruvi Patel"
    description     = 'Nextflow Next-generation Sequence-analysis Toolkit (Nf-NeST) : A standardized bioinformatics framework for analyzing SNPs in next-generation sequencing data'
    homePage        = "git@github.com:yyr4/Nf-NeST.git"
    mainScript      = "main.nf"
    nextflowVersion = ">=20.07"
    version         =  VERSION
}

/*
timeline {
  enabled = true
  file = "$params.out/timeline.html"
}
*/